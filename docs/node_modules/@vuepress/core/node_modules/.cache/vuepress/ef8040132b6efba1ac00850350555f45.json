{"remainingRequest":"/Users/hyunjinnam/theriskaka/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hyunjinnam/theriskaka/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/hyunjinnam/theriskaka/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/hyunjinnam/theriskaka/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/hyunjinnam/theriskaka/docs/src/config/양념치킨 546721ffa5e04475a43c95e42a6d6853.md?vue&type=template&id=09f5a442&","dependencies":[{"path":"/Users/hyunjinnam/theriskaka/docs/src/config/양념치킨 546721ffa5e04475a43c95e42a6d6853.md","mtime":1615492285208},{"path":"/Users/hyunjinnam/theriskaka/docs/node_modules/cache-loader/dist/cjs.js","mtime":1615490108888},{"path":"/Users/hyunjinnam/theriskaka/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1615490113916},{"path":"/Users/hyunjinnam/theriskaka/docs/node_modules/cache-loader/dist/cjs.js","mtime":1615490108888},{"path":"/Users/hyunjinnam/theriskaka/docs/node_modules/vue-loader/lib/index.js","mtime":1615490113916},{"path":"/Users/hyunjinnam/theriskaka/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1615490112408}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}